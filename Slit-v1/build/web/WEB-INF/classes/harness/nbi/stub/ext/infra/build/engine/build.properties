# path to the directory where the base build scripts library and properties 
# reside
common.dir=../../../../.common

# path to the local working directory; this directory which will be the target 
# for checking out the sources and will be used for the build process
# * this path can be either absolute or relative in any unix environment, 
#   however, only relative paths are supported on windows, as the cygwin scp 
#   command does not properly handle colon in local paths
work.dir=./build

# path to the local distributive directory; this directory will contain the 
# distributive file, when (if) the build script finishes successfully
dist.dir=./dist

# path to the engine sources within the cvs module; it should be a relative 
# path from the module's root, e.g. for 'nbi/engine', where 'nbi is the module 
# name, the path should be 'engine'
cvs.path=engine

# name of the engine's distributive file
engine.dist.file.name=nbi-engine.jar

# we do not need to build anything native for the netbeans-specific engine, as it 
# does not contain any native components
build.native=false

# custom parameter for the netbeans project build script - in case of the netbeans
# nbi engine - the location of the core engine jar file
nb.custom.parameter=-Dreference.NBI_Engine.jar=${core.engine.dist.file}

# sources parameters; a search-and-replace will be run over the sources after 
# check-out, replacing [token] => [value]; regular expressions are not allowed
# * ${sources.params.length} - total number of the parameters
# * indices should start with 1
# * parameters are not i18n compliant

sources.params.length=0
